class Solution {
    public int numWays(int n) {
        //动态规划 
        //青蛙要跳上第n层台阶 那么有两种跳法
        //第一种：先跳上第n-2层台阶，再跳2层
        //第二种：先跳上第n-1层台阶，再跳1层
        //因此 跳上第n层台阶的跳法等于跳上第n-2层的跳法+第n-1层的跳法
        //dp[n] = dp[n-1] + dp[n-2]
        if(n<=1){
            return 1; 
        }
        int[] dp = new int[n+1];
        dp[1] = 1;
        dp[2] = 2;
        for(int i =3;i<=n;i++){
            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007;
        }
        return dp[n];
    }
}