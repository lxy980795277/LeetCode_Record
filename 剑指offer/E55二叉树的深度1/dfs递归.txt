/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //dfs递归做法
    //递归三部曲 
    //1、确定递归函数的作用 如果当前层有节点，那么深度就+1
    //2、递归结束的标志 当前节点为空 即上一个节点已经到了叶子节点
    //3、递归每一层之间的传递 当前节点不为空 则进入下一层 
    int max = 0;
    public int maxDepth(TreeNode root) {
        if(root == null){
            return 0;
        }
        dfs(root,0);
        return max;
    }

    public void dfs(TreeNode p,int depth){
        
        if(p == null){
            max = depth>max?depth:max;
            System.out.println(depth);
            return ;
        }
            dfs(p.left,depth+1);
            dfs(p.right,depth+1);

    }
}