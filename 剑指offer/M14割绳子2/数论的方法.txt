class Solution {
    //这一题已经不能用动态规划了 
    //因为取余运算后，max函数已经无法比较两个数的大小
    //所以用数论的方法
    //一个数 拆开的因子中，3越多，那么乘积越大，所以应该让3尽可能的多
    //任意一个数，每一次拆出来一个3，直到拆到只剩下3为止
    //例如 15拆为3+3+3+3+3乘积最大，20拆为3+3+3+3+3+3+2乘积最大
    public int cuttingRope(int n) {
        if(n == 2)
            return 1;
        if(n == 3)
            return 2;
        long res = 1;
        while(n > 4){
            res *= 3;
            res = res % 1000000007;
            n -= 3;
        }
        return (int)(res * n % 1000000007);
    }
}